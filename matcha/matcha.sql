BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "blocked" (
	"id"	INTEGER NOT NULL,
	"userId"	INTEGER NOT NULL,
	"blockedId"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("blockedId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "likes" (
	"id"	INTEGER NOT NULL,
	"user1"	INTEGER NOT NULL,
	"user2"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("user2") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("user1") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "location" (
	"id"	INTEGER NOT NULL,
	"lngCord"	INTEGER DEFAULT NULL,
	"latCord"	INTEGER DEFAULT NULL,
	"city"	TEXT DEFAULT NULL,
	"userid"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("userid") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "matches" (
	"id"	INTEGER NOT NULL,
	"user1"	INTEGER NOT NULL,
	"user2"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("user1") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("user2") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "messages" (
	"id"	INTEGER NOT NULL,
	"matchId"	INTEGER NOT NULL,
	"senderId"	INTEGER NOT NULL,
	"receiveId"	INTEGER NOT NULL,
	"message"	TEXT NOT NULL,
	"time"	TEXT NOT NULL,
	"seen"	INTEGER DEFAULT 0,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("matchId") REFERENCES "matches"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("receiveId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("senderId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "photos" (
	"id"	INTEGER NOT NULL,
	"userId"	INTEGER NOT NULL,
	"path"	TEXT NOT NULL,
	"profile"	INTEGER DEFAULT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "reports" (
	"id"	INTEGER NOT NULL,
	"userId"	INTEGER NOT NULL,
	"reportedId"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "tags" (
	"id"	INTEGER NOT NULL,
	"tags"	TEXT NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "users" (
	"id"	INTEGER NOT NULL,
	"fname"	TEXT NOT NULL,
	"lname"	TEXT NOT NULL,
	"username"	TEXT NOT NULL,
	"email"	TEXT NOT NULL,
	"password"	TEXT NOT NULL,
	"verify"	TEXT DEFAULT NULL,
	"banned"	INTEGER NOT NULL DEFAULT 0,
	"gender"	TEXT DEFAULT NULL,
	"bio"	TEXT DEFAULT NULL,
	"ProfilePictureID"	INTEGER DEFAULT NULL,
	"sexuality"	TEXT DEFAULT 'S',
	"tags"	TEXT DEFAULT NULL,
	"complete"	INTEGER DEFAULT 0,
	"fame"	INTEGER NOT NULL DEFAULT 0,
	"online"	INTEGER NOT NULL DEFAULT 0,
	"lastonline"	TEXT DEFAULT NULL,
	"birthdate"	TEXT DEFAULT NULL,
	"passreset"	TEXT DEFAULT NULL,
	"totalviews"	INTEGER NOT NULL DEFAULT 0,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("ProfilePictureID") REFERENCES "photos"("id") ON DELETE SET NULL ON UPDATE SET NULL
);
CREATE TABLE IF NOT EXISTS "usertags" (
	"id"	INTEGER NOT NULL,
	"userId"	INTEGER NOT NULL,
	"tagId"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("tagId") REFERENCES "tags"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS "views" (
	"id"	INTEGER NOT NULL,
	"viewer"	INTEGER NOT NULL,
	"viewee"	INTEGER NOT NULL,
	PRIMARY KEY("id" AUTOINCREMENT),
	FOREIGN KEY("viewer") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY("viewee") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
COMMIT;
